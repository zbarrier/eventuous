name: "PR Build and test"
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - docs/**

jobs:
  event_file:
    name: "Event File"
#    runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
  build-and-test:
    name: "Build and test"
#    runs-on: ubuntu-latest
    runs-on: self-hosted
    strategy:
      matrix:
        dotnet-version: [ '8.0', '9.0' ]
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      TC_CLOUD_TOKEN: ${{ secrets.TC_TOKEN }}
      DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet
    steps:
      -  
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      -
        name: Restore
        run: |
          dotnet restore -p:TargetFramework=net${{ matrix.dotnet-version }} -p:Configuration="Debug CI" 
      -  
        name: Build
        run: |
          dotnet build -c "Debug CI" -f net${{ matrix.dotnet-version }} --no-restore
      -  
        name: Prepare Testcontainers Cloud agent
        if: env.TC_CLOUD_TOKEN != ''
        uses: atomicjar/testcontainers-cloud-setup-action@main
      -  
        name: Run tests
        run: |
          dotnet test -c "Debug CI" --no-build -f net${{ matrix.dotnet-version }}
      -  
        name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results ${{ matrix.dotnet-version }}
          path: |
            test-results/**/*.xml
            test-results/**/*.trx
            test-results/**/*.json